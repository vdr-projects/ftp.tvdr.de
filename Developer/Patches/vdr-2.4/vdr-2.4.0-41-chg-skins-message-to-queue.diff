# If cSkins::Message() is called from a background thread and Type is not mtStatus,
# the call is now automatically forwarded to QueueMessage().
#
diff -u -r5.1 ./skins.c
--- ./skins.c	2018/04/28 12:13:01	5.1
+++ ./skins.c	2019/05/29 16:43:09
@@ -250,7 +250,10 @@
 eKeys cSkins::Message(eMessageType Type, const char *s, int Seconds)
 {
   if (!cThread::IsMainThread()) {
-     dsyslog("cSkins::Message() called from background thread - ignored! (Use cSkins::QueueMessage() instead)");
+     if (Type != mtStatus)
+        QueueMessage(Type, s, Seconds);
+     else
+        dsyslog("cSkins::Message(%d, \"%s\", %d) called from background thread - ignored! (Use cSkins::QueueMessage() instead)", Type, s, Seconds);
      return kNone;
      }
   switch (Type) {
diff -u -r5.0 ./skins.h
--- ./skins.h	2017/11/02 15:04:56	5.0
+++ ./skins.h	2019/05/29 16:36:41
@@ -477,6 +477,8 @@
        ///< has been received within Seconds (the default value of 0 results
        ///< in the value defined for "Message time" in the setup), kNone
        ///< will be returned.
+       ///< If Message() is called from a background thread and Type is not
+       ///< mtStatus, the call will be automatically forwarded to QueueMessage().
   int QueueMessage(eMessageType Type, const char *s, int Seconds = 0, int Timeout = 0);
        ///< Like Message(), but this function may be called from a background
        ///< thread. The given message is put into a queue and the main program
