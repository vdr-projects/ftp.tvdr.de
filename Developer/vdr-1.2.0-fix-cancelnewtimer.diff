--- menu.c	2003/05/30 09:53:57	1.253
+++ menu.c	2003/06/06 14:59:47
@@ -834,21 +835,21 @@
   cTimer *timer;
   cTimer data;
   int channel;
-  bool deleteIfCancelled;
+  bool addIfConfirmed;
   cMenuEditDateItem *firstday;
   void SetFirstDayItem(void);
 public:
-  cMenuEditTimer(int Index, bool New = false);
+  cMenuEditTimer(cTimer *Timer, bool New = false);
   virtual ~cMenuEditTimer();
   virtual eOSState ProcessKey(eKeys Key);
   };
 
-cMenuEditTimer::cMenuEditTimer(int Index, bool New)
+cMenuEditTimer::cMenuEditTimer(cTimer *Timer, bool New)
 :cOsdMenu(tr("Edit timer"), 12)
 {
   firstday = NULL;
-  timer = Timers.Get(Index);
-  deleteIfCancelled = New;
+  timer = Timer;
+  addIfConfirmed = New;
   if (timer) {
      data = *timer;
      if (New)
@@ -869,12 +870,8 @@
 
 cMenuEditTimer::~cMenuEditTimer()
 {
-  if (timer && deleteIfCancelled) {
-     int Index = timer->Index();
-     Timers.Del(timer);
-     Timers.Save();
-     isyslog("timer %d deleted", Index + 1);
-     }
+  if (timer && addIfConfirmed)
+     delete timer; // apparently it wasn't confirmed
   Timers.DecBeingEdited();
 }
 
@@ -908,14 +905,18 @@
                           }
                        if (!*data.file)
                           strcpy(data.file, data.Channel()->Name());
-                       if (timer && memcmp(timer, &data, sizeof(data)) != 0) {
-                          *timer = data;
-                          if (timer->active)
-                             timer->active = 1; // allows external programs to mark active timers with values > 1 and recognize if the user has modified them
+                       if (timer) {
+                          if (memcmp(timer, &data, sizeof(data)) != 0) {
+                             *timer = data;
+                             if (timer->active)
+                                timer->active = 1; // allows external programs to mark active timers with values > 1 and recognize if the user has modified them
+                             }
+                          if (addIfConfirmed)
+                             Timers.Add(timer);
                           Timers.Save();
-                          isyslog("timer %d modified (%s)", timer->Index() + 1, timer->active ? "active" : "inactive");
+                          isyslog("timer %d %s (%s)", timer->Index() + 1, addIfConfirmed ? "added" : "modified", timer->active ? "active" : "inactive");
+                          addIfConfirmed = false;
                           }
-                       deleteIfCancelled = false;
                      }
                      return osBack;
        case kRed:
@@ -1033,19 +1034,14 @@
   if (HasSubMenu() || Count() == 0)
      return osContinue;
   isyslog("editing timer %d", CurrentTimer()->Index() + 1);
-  return AddSubMenu(new cMenuEditTimer(CurrentTimer()->Index()));
+  return AddSubMenu(new cMenuEditTimer(CurrentTimer()));
 }
 
 eOSState cMenuTimers::New(void)
 {
   if (HasSubMenu())
      return osContinue;
-  cTimer *timer = new cTimer;
-  Timers.Add(timer);
-  Add(new cMenuTimerItem(timer), true);
-  Timers.Save();
-  isyslog("timer %d added", timer->Index() + 1);
-  return AddSubMenu(new cMenuEditTimer(timer->Index(), true));
+  return AddSubMenu(new cMenuEditTimer(new cTimer, true));
 }
 
 eOSState cMenuTimers::Delete(void)
@@ -1094,8 +1090,7 @@
 
 eOSState cMenuTimers::ProcessKey(eKeys Key)
 {
-  cTimer *ti = HasSubMenu() ? CurrentTimer() : NULL;
-  int TimerNumber = ti ? ti->Index() : -1;
+  int TimerNumber = HasSubMenu() ? Count() : -1;
   eOSState state = cOsdMenu::ProcessKey(Key);
 
   if (state == osUnknown) {
@@ -1112,9 +1107,9 @@
        default: break;
        }
      }
-  if (TimerNumber >= 0 && !HasSubMenu() && !Timers.Get(TimerNumber)) {
-     // a newly created timer wasn't confirmed with Ok
-     cOsdMenu::Del(Current());
+  if (TimerNumber >= 0 && !HasSubMenu() && Timers.Get(TimerNumber)) {
+     // a newly created timer was confirmed with Ok
+     Add(new cMenuTimerItem(Timers.Get(TimerNumber)), true);
      Display();
      }
   return state;
@@ -1274,16 +1269,11 @@
   if (item) {
      cTimer *timer = new cTimer(item->eventInfo);
      cTimer *t = Timers.GetTimer(timer);
-     if (!t) {
-        Timers.Add(timer);
-        Timers.Save();
-        isyslog("timer %d added", timer->Index() + 1);
-        }
-     else {
+     if (t) {
         delete timer;
         timer = t;
         }
-     return AddSubMenu(new cMenuEditTimer(timer->Index(), !t));
+     return AddSubMenu(new cMenuEditTimer(timer, !t));
      }
   return osContinue;
 }
@@ -1408,16 +1398,11 @@
   if (item) {
      cTimer *timer = new cTimer(item->eventInfo);
      cTimer *t = Timers.GetTimer(timer);
-     if (!t) {
-        Timers.Add(timer);
-        Timers.Save();
-        isyslog("timer %d added", timer->Index() + 1);
-        }
-     else {
+     if (t) {
         delete timer;
         timer = t;
         }
-     return AddSubMenu(new cMenuEditTimer(timer->Index(), !t));
+     return AddSubMenu(new cMenuEditTimer(timer, !t));
      }
   return osContinue;
 }
